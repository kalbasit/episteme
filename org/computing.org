#+title: computing
#+description: Linux knowledge-base of the ##apoptosis community on Freenode
#+language: en
#+startup: overview indent align
#+babel: :cache no
#+options: ^:nil num:nil tags:nil
#+html_head: <link rel="stylesheet" type="text/css" href="https://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+html_head: <link rel="stylesheet" type="text/css" href="https://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>
#+html_head: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+html_head: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+html_head: <script type="text/javascript" src="https://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.js"></script>
#+html_head: <script type="text/javascript" src="https://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>
#+html_head: <link rel="stylesheet" type="text/css" href="/episteme/extra.css"/>
* Software
** Editors
*** Emacs
**** Bookmarks
***** Package Dev Handbook
https://github.com/alphapapa/emacs-package-dev-handbook/blob/master/README.org
***** Writing Extensions
http://citeseerx.ist.psu.edu/viewdoc/download?doi%3D10.1.1.302.8383&rep%3Drep1&type%3Dpdf
***** John Kitchin's Blog
http://kitchingroup.cheme.cmu.edu/blog/category/orgmode/
***** The Most Beautiful Program
http://paperswelove.org/2017/video/will-byrd-most-beautiful-program/
**** Packages
***** org - personal organization
****** Speedkeys
Single-key bindings when point as at heading start.

Enable: [[elisp:(describe-variable 'org-use-speed-commands)][org-use-speed-commands]]
Customize: [[elisp:(describe-variable 'org-speed-commands-user)][org-speed-commands-user]]
List keys: ?

    |------+-------+--------------------------+-----+-----|
    | bind | speed | desc                     | doc | src |
    |------+-------+--------------------------+-----+-----|
    | M-n  | n     | Next Visible Heading     | [[elisp:(describe-function 'outline-next-visible-heading)][*]]   | [[elisp:(find-function 'outline-next-visible-heading)][*]]   |
    | M-p  | p     | Previous Visible Heading | [[elisp:(describe-function 'outline-previous-visible-heading)][*]]   | [[elisp:(find-function 'outline-previous-visible-heading)][*]]   |
    | M-N  |       | Next Heading             | [[elisp:(describe-function 'outline-next-heading)][*]]   | [[elisp:(find-function 'outline-next-heading)][*]]   |
    | M-P  |       | Previous Heading         | [[elisp:(describe-function 'outline-previous-heading)][*]]   | [[elisp:(find-function 'outline-previous-heading)][*]]   |
    | H-q  | q     | Reset View               | [[elisp:(describe-function 'knowt-reset)][*]]   | [[elisp:(find-function 'knowt-reset)][*]]   |
    | H-w  | w     | Widen                    | [[elisp:(describe-function 'knowt-widen)][*]]   | [[elisp:(find-function 'knowt-widen)][*]]   |
    | H-s  | s     | Narrow                   | [[elisp:(describe-function 'knowt-narrow-to-subtree)][*]]   | [[elisp:(find-function 'knowt-narrow-to-subtree][*]]   |
    | H-h  | h     | Narrow to Heading Search | [[elisp:(describe-function 'knowt-narrow-heading)][*]]   | [[elisp:(find-function 'knowt-narrow-heading)][*]]   |
    |------+-------+--------------------------+-----+-----|
****** Bookmarks
******* Literate Devops
http://howardism.org/Technical/Emacs/literate-devops.html
******* Org-scraps
https://eschulte.github.io/org-scraps/
***** org-babel - execute code from org-mode
https://orgmode.org/worg/org-contrib/babel/
****** Bookmarks
******* Get stderr
http://kitchingroup.cheme.cmu.edu/blog/2015/01/04/Redirecting-stderr-in-org-mode-shell-blocks/

***** org-mind-map - org -> directed graph image
https://github.com/theodorewiles/org-mind-map
***** docker.el
https://github.com/Silex/docker.el
***** ht.el - hashtables
https://github.com/Wilfred/ht.el
***** hydra.el - completion
https://github.com/abo-abo/hydra
***** bui.el - simple list-based interfaces
https://github.com/alezost/bui.el
***** helm-org-rifle - quick org navigation
https://github.com/alphapapa/helm-org-rifle
***** org-super-agenda - grouped agenda view
https://github.com/alphapapa/org-super-agenda
***** org-agenda-ng - query for org headings
https://github.com/alphapapa/org-agenda-ng#org-ql
***** helm - completion
https://github.com/emacs-helm/helm
***** emacs-async - simple subprocess async
https://github.com/jwiegley/emacs-async
***** use-package.el - package management
https://github.com/jwiegley/use-package
***** emacs-multi - multi methods
https://github.com/kurisuwhyte/emacs-multi
***** magit.el - git porcelain
https://github.com/magit/magit
***** dash.el - lists
https://github.com/magnars/dash.el
***** multiple-cursors.el
https://github.com/magnars/multiple-cursors.el
***** s.el - strings
https://github.com/magnars/s.el
***** general.el - bindings
https://github.com/noctuid/general.el
***** restclient.el - in-buffer rest interaction mode
https://github.com/pashky/restclient.el
***** a.el - association lists
https://github.com/plexus/a.el
***** f.el - files
https://github.com/rejeep/f.el
***** prodigy.el - service management
https://github.com/rejeep/prodigy.el
***** emacs-request - http client
https://github.com/tkf/emacs-request
**** Scraps
***** Get face (and other info) under point
=M-x= elisp:describe-char
***** Show available colors and faces
=M-x= elisp:list-colors-display
=M-x= elisp:list-faces-display
** Version Control
*** Git
**** Porcelains
***** grv
https://github.com/rgburke/grv
** Chat
*** IRC
**** Freenode
***** Channel Administration
****** Listing owned channels
#+begin_src text
/query nickserv listchans
#+end_src

****** Dropping an owned channel
#+begin_src text
/query chanserv drop #channel-name
#+end_src

****** Setting up a redirection
#+begin_src text
/query chanserv set #source-channel MLOCK +isf #target-channel
#+end_src

**** Weechat
***** Servers
****** Help
#+begin_src shell
  /help server
#+end_src

****** Rename a server
#+begin_src shell
  /server rename freenode-two freenode2
#+end_src

***** Scripts
****** Open script buffer
#+begin_src shell
  /script
#+end_src

****** Set script buffer sorting
#+begin_src shell
  /fset script.look.sort
#+end_src

/set script.look.sort i,n

i = installed, n = name

* Languages
** F#
*** Bookmarks
**** TCP Client example
https://stackoverflow.com/questions/44256724/netcat-snippet-equivalent-in-f-tcpclient
*** Packages
**** Hopac
https://github.com/Hopac/Hopac
* Linux
** NixOS
*** Installation
**** Initial Partition Prep
There needs to be at least three partitions:
| Name  | Size           | Filesystem | Flags    |
|-------+----------------+------------+----------|
| efi   | 1GiB           | fat32      | esp,boot |
| swap  | $available_ram | linux-swap |          |
| nixos | $unused_space  | xfs        |          |
*** Scraps
**** Search for packages
#+begin_src shell
 nix-env -qaP '.*emacs.*'
#+end_src

**** Force config merge ordering
#+begin_src nix
  systemd.services.znc.preStart = lib.mkBefore "echo 'foo'"
#+end_src

#+begin_src nix
  systemd.services.znc.preStart = lib.mkAfter "echo 'foo"
#+end_src

**** Add nixpkgs or nixos fork as channel
#+begin_src text
  nix-channel --add https://github.com/LnL7/nixpkgs/archive/foo.tar.gz nixpkgs-foo
#+end_src



*** Home-manager
**** Scraps
***** Activation Packages
Uses a directed graph to sort activation packages:
#+begin_src nix
  home.activation.ssh-personal = dag.entryAfter ["installPackages"] ''
    chmod 400 /Users/dustinlacewell/.ssh/personal
  '';
#+end_src

